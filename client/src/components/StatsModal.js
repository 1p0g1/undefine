import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
export const StatsModal = ({ isOpen, onClose, stats, loading }) => {
    if (!isOpen)
        return null;
    return (_jsx("div", { className: "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center", children: _jsxs("div", { className: "bg-white p-6 rounded-lg max-w-2xl w-full mx-4", children: [_jsx("h2", { className: "text-2xl font-bold mb-4", children: "Your Stats" }), loading ? (_jsx("div", { className: "text-center py-4", children: "Loading stats..." })) : !stats ? (_jsx("div", { className: "text-center py-4", children: "No stats available" })) : (_jsxs("div", { className: "grid grid-cols-2 gap-4", children: [_jsxs("div", { children: [_jsx("p", { className: "text-gray-600", children: "Games Played" }), _jsx("p", { className: "text-2xl font-bold", children: stats.gamesPlayed })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-600", children: "Games Won" }), _jsx("p", { className: "text-2xl font-bold", children: stats.gamesWon })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-600", children: "Win Rate" }), _jsxs("p", { className: "text-2xl font-bold", children: [((stats.gamesWon / stats.gamesPlayed) * 100).toFixed(1), "%"] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-gray-600", children: "Average Guesses" }), _jsx("p", { className: "text-2xl font-bold", children: stats.averageGuesses.toFixed(1) })] })] })), _jsx("button", { onClick: onClose, className: "mt-6 px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600", children: "Close" })] }) }));
};
